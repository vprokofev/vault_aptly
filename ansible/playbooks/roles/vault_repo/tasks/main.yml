- name: 'Install apt packages'
  ansible.builtin.apt:
    name: '{{ item }}'
    state: latest
  loop:
    - docker.io
    - python3-pip

- name: 'Install pip packages'
  ansible.builtin.pip:
    name: '{{ item }}'
    extra_args: '--upgrade'
  loop:
    - pip
    - docker

- name: 'Create directory structures'
  ansible.builtin.file:
    name: '{{ item }}'
    state: directory
  loop:
    - '{{ repo_workdir }}'
    - '{{ repo_workdir }}/deb'
    - '{{ repo_workdir }}/deb/ceph'
    - '{{ repo_workdir }}/deb/ubuntu'
    - '{{ repo_workdir }}/deb/openstack'
    - '{{ repo_workdir }}/pypi'
    - '{{ repo_workdir }}/docker'

- name: 'Copy templates'
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: '{{ item.mode }}'
  loop:
    - { src: 'Dockerfile', dest: '{{ repo_workdir }}/docker/Dockerfile', mode: '0644' }
    - { src: 'rsync_mirror.sh', dest: '{{ repo_workdir }}/docker/rsync_mirror.sh', mode: '0755' }
    - { src: 'meta-release', dest: '{{ repo_workdir }}/deb/ubuntu/meta-release', mode: '0644' }
    - { src: 'meta-release-lts', dest: '{{ repo_workdir }}/deb/ubuntu/meta-release-lts', mode: '0644' }
    - { src: 'nginx.conf', dest: '{{ repo_workdir }}/docker/nginx.conf', mode: '0644' }
    - { src: 'bandersnatch.conf', dest: '{{ repo_workdir }}/docker/bandersnatch.conf', mode: '0644' }

- name: 'Build rsync container'
  community.docker.docker_image:
    name: rsync
    build:
      path: '{{ repo_workdir }}/docker/'
    source: build

- name: 'Run init rsync container'
  community.docker.docker_container:
    name: repo-rsync
    image: rsync
    command: '/bin/bash /rsync_mirror.sh'
    recreate: yes
    detach: no
    container_default_behavior: no_defaults
    restart_policy: no
    volumes:
      - '{{ repo_workdir }}/deb/:{{ repo_workdir }}/deb/:z'
      - '{{ repo_workdir }}/docker/rsync_mirror.sh:/rsync_mirror.sh:ro'
  run_once: True
  when: init

- name: 'Run init bandersnatch container'
  community.docker.docker_container:
    name: repo-bandersnatch
    image: pypa/bandersnatch
    command: bandersnatch mirror
    detach: no
    recreate: yes
    container_default_behavior: no_defaults
    restart_policy: unless-stopped
    volumes:
      - '{{ repo_workdir }}/pypi/:{{ repo_workdir }}/pypi/:z'
      - '{{ repo_workdir }}/docker/bandersnatch.conf:/etc/bandersnatch.conf:ro'
  when: init

- name: 'Create initial snapshot for each repository'
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
  loop:
      - '{{ repo_workdir }}/deb/ubuntu/.snap/{{ ansible_date_time.date }}/'
      - '{{ repo_workdir }}/deb/openstack/ubuntu/.snap/{{ ansible_date_time.date }}/'
      - '{{ repo_workdir }}/deb/ceph/.snap/{{ ansible_date_time.date }}/'
      - '{{ repo_workdir }}/pypi/web/.snap/{{ ansible_date_time.date }}/'
  when: init

- name: 'Run nginx container'
  community.docker.docker_container:
    name: repo-nginx
    image: nginx
    recreate: yes
    container_default_behavior: no_defaults
    restart_policy: unless-stopped
    volumes:
      - '{{ repo_workdir }}:{{ repo_workdir }}:ro'
      - '{{ repo_workdir }}/docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro'
    ports:
      - '80:80'
