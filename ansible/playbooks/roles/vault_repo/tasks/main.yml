- name: 'Install apt packages'
  ansible.builtin.apt:
    name: '{{ item }}'
    state: latest
  loop:
    - docker.io
    - python3-pip

- name: 'Install pip packages'
  ansible.builtin.pip:
    name: '{{ item }}'
    extra_args: '--upgrade'
  loop:
    - pip
    - docker

- name: 'Create directory structures'
  ansible.builtin.file:
    name: '{{ item }}'
    state: directory
  loop:
    - '{{ repo_workdir }}'
    - '{{ repo_workdir }}/deb'
    - '{{ repo_workdir }}/pypi'
    - '{{ repo_workdir }}/docker'

- name: 'Copy templates'
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  loop:
    - { src: 'Dockerfile', dest: '{{ repo_workdir }}/docker/Dockerfile' }
    - { src: 'mirror.list', dest: '{{ repo_workdir }}/docker/mirror.list' }

- name: 'Build apt-mirror container'
  community.docker.docker_image:
    name: apt-mirror
    build:
      path: '{{ repo_workdir }}/docker/'
    source: build

- name: 'Run init apt-mirror container'
  community.docker.docker_container:
    name: repo-apt-mirror
    image: apt-mirror
    command: apt-mirror
    recreate: yes
#    interactive: yes
    detach: no
    container_default_behavior: no_defaults
    restart_policy: no
    volumes:
      - '{{ repo_workdir }}/deb:/var/spool/apt-mirror/:z'
      - '{{ repo_workdir }}/docker/mirror.list:/etc/apt/mirror.list:ro'
  run_once: True
  when: init

- name: 'List created directories'
  ansible.builtin.shell:
    cmd: 'ls {{ repo_workdir }}/deb/mirror/'
  register: deb_directories
  when: init

- name: 'Create snapshot for each repository'
  ansible.builtin.file:
    path: '{{ repo_workdir }}/deb/mirror/{{ item }}/.snap/{{ ansible_date_time.date }}'
    state: directory
  loop: '{{ deb_directories.stdout_lines }}'
  when: init

- name: 'Run updater apt-mirror container'
  community.docker.docker_container:
    name: repo-apt-mirror
    image: apt-mirror
    recreate: yes
    container_default_behavior: no_defaults
    restart_policy: unless-stopped
    volumes:
      - '{{ repo_workdir }}/deb:/var/spool/apt-mirror/:z'
      - '{{ repo_workdir }}/docker/mirror.list:/etc/apt/mirror.list:ro'
  run_once: True
  when: not init

- name: 'Prepare nginx.conf'
  ansible.builtin.template:
    src: nginx.conf
    dest: '{{ repo_workdir }}/docker/nginx.conf'

- name: 'Run nginx container'
  community.docker.docker_container:
    name: repo-nginx
    image: nginx
    recreate: yes
    container_default_behavior: no_defaults
    restart_policy: unless-stopped
    volumes:
      - '{{ repo_workdir }}:{{ repo_workdir }}:ro'
      - '{{ repo_workdir }}/docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro'
    ports:
      - '80:80'
